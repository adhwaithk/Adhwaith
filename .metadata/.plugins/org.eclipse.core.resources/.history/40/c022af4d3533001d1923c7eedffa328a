package mergesn;
class mergesort1{
	void merge(int a[],int beg,int mid,int end) {
		int i,j,k;
		int n1=mid-beg+1;
		int n2=end-mid;
		int l[]=new int[n1];
		int r[]=new int[n2];
		for(i=0;i<n1;i++)
			l[i]=a[beg+i];
		for(j=0;j<n2;j++)
			r[j]=a[mid+1+j];
		i=0;
		j=0;
		k=beg;
		while(i<n1&&j<n2)
		{
			if(l[i]<=r[j])
			{
				a[k]=l[i];
				i++;
			}
			else
			{
				a[k]=r[j];
				j++;
			}
			k++;
		}
		while(i<n1)
		{
			a[k]=l[i];
			i++;
			k++;
		}
		while(j<n2) {
			a[k]=r[j];
			j++;
			k++;
		}
		
	}
	void mergesort(int a[],int beg,int end)
	{
		if(beg<end)
		{
			int mid=(beg+end)/2;
			mergesort(a,beg,mid);
			mergesort(a,mid+1,end);
			merge(a,beg,mid,end);
		}
	}
	void printarray(int a[],int n)
	{
		int i;
		for(i=0;i<n;i++)
			System.out.print(a[i]+"");
	}
}
public class mergesn {

	public static void main(String[] args) {
		int a[]= {11,30,24,7,31,16,39,41};
		int n=a.length;
		mergesort1 m1= new mergesort1();
		m1.mergesort(a, 0, n-1);
		m1.printarray(a, n);
		System.out.println("");
		

	}

}
